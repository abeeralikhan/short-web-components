[ 14/08/2022 01:30 ]

- apply reset

- initialize all the variables inside ":root"

- variable names:
    clr - color
    ff - font family
    fw - font weight
    fs - font size

- Lesson learnt:
    + Setting up variables is very important if you wanna make a flexible and a large scale project

    + Set variables, then use an abstraction to use those variables

    + Analyzing the entire project from top to bottom, and for mobile screen is very crucial

    + Analayze how things e.g. font-size, font-style is changing from desktop to mobile view

    + Learn about accent, neutral, primary colors

- Make separate utility classes of all of your variables
    + text-XXX-XXX
    + bg-XXX-XXX
    + fw-XXX
    + fs-XXX
    
    + Then, apply utility classes directly to the elements

[ 15/08/2022 01:41 ]

- In the beginning there's no need to worry about width and height

- Make small grids
    + No need to cover your entire website in a single grid
    + Some sections just have two even columns
    + Make one grid class, apply to relevant sections

- If you want same left and right padding throughout the
    + Give all the section an outer class of container
    + And, apply padding on that container 
    + You can have consistent left and right paddings throughout the document
    - Benefit: If some section doesnt want to follow the flow. 
        + You can just remove the container class from that section and rest of the flow wont be disturbed

+ Use role="list" where ever you're making lists for accessiblity

- Those section which are your "CALL TO ACTION" or CTA
    + Give them a class cta separed by a pipe for visualization
    + For Example:
        <section class="cta | bg-primary-400 fw-700"></section>

- When all of your elements same class, and one element is inverted
    + Give that element attribute --> data-type="inverted"

- Use aria-label="logo name" for list links that dont have any text

[ 15/08/2022 17:00 ]

+ Classes are conventionally used for styling the elements

+ Ids are used for linking other elements, access elements in javascript, referencing etc

